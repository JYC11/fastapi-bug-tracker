name: fastapi-bug-tracker



on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

env:
  STAGE: testing
  WORKING_ON_PIPELINE: 'True'
  POSTGRES_PASSWORD: 1234

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: 'postgres:latest'
        env:
          POSTGRES_USER: jason
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: bug_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pipenv"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv sync --dev
      
      - name: Lint tests + linting
        run: |
          pipenv run black . --check --line-length=120
          pipenv run ruff check --exit-zero .
     
      - name: Mypy type checking
        run: |
          pipenv run mypy --check-untyped-defs -p app
      
      # - name: Postgres container for integration + e2e testing
      #   run: |
      #     docker-compose -f "compose.yml" up -d --build
      #     docker-compose ps

      - name: Test with pytest
        run: |
          pipenv run pytest